name: Noorse site CI

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build PROD
    steps:
      - uses: actions/checkout@v1
      - uses: bahmutov/npm-install@v1
      - run: yarn build
        env:
          CONTENTFUL_TOKEN: ${{secrets.CONTENTFUL_TOKEN}}
          PROD: true
      - name: deploy-preview
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './public'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy ${{ github.ref }}'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: cfb311e2-904f-4acb-9937-30e50d59f3ca

  build-dev:
    if: contains(github.event_name, 'pull_request')
    runs-on: ubuntu-latest
    name: Build DEV
    steps:
      - uses: actions/checkout@v1
      - uses: bahmutov/npm-install@v1
      - run: yarn build
        env:
          CONTENTFUL_TOKEN_PREVIEW: ${{secrets.CONTENTFUL_TOKEN_PREVIEW}}
          PROD: false
      - name: Upload built folder
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: public
      - name: deploy-preview
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './public'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
          deploy-message: 'PR ${{ github.event.pull_request.title }}'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: cfb311e2-904f-4acb-9937-30e50d59f3ca

  lighthouse-check:
    needs: build-dev
    runs-on: ubuntu-latest
    name: Lighthouse Check
    continue-on-error: true
    steps:
      - uses: actions/checkout@v1
      - name: Download built folder
        uses: actions/download-artifact@v2
        with:
          name: public
          path: public
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v2
        with:
          configPath: './lighthouserc.json'
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{secrets.LHCI_GITHUB_APP_TOKEN}}

  backstop-test:
    needs: build-dev
    runs-on: ubuntu-latest
    name: Backstop Test
    continue-on-error: true
    steps:
      - uses: actions/checkout@v1
      - name: Download built folder
        uses: actions/download-artifact@v2
        with:
          name: public
          path: public
      - uses: ./.github/run-backstop
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: backstop-test
          path: backstop_data/

  cleanup-dev:
    runs-on: ubuntu-latest
    name: Delete artifact
    needs: [backstop-test, lighthouse-check]
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: public
