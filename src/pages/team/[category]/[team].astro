---
import Layout from '../../../layouts/Layout.astro'
import { TeamPage } from '../../../react/pages'
import { contentfulClient } from '../../../lib/contentful'

import type { EntryFieldTypes } from 'contentful'
import { getVvData, getCalendarConfig } from '../../../utils/get-vv-data'
import type { Team } from '../../../react/types/team'

interface Category {
  contentTypeId: 'categorie'
  fields: {
    naam: EntryFieldTypes.Text
  }
}

interface TeamEntry {
  contentTypeId: 'ploeg'
  fields: {
    naam: EntryFieldTypes.Text
    naamOpVoetbalVlaanderen: EntryFieldTypes.Text
    categorie: EntryFieldTypes.EntryResourceLink<Category>
    logo: EntryFieldTypes.AssetLink
  }
}

export async function getStaticPaths() {
  const typedData = getVvData(
    import.meta.env.CONTENTFUL_ENV === 'master' ? 'master' : 'test'
  )
  const actualCalendarConfig = getCalendarConfig(
    import.meta.env.CONTENTFUL_ENV === 'master' ? 'master' : 'test'
  )

  const teams = (
    await contentfulClient.withoutUnresolvableLinks.getEntries<TeamEntry>({
      content_type: 'ploeg',
    })
  ).items

  return teams
    .map(({ fields }) => fields)
    .map((team) => {
      const config = actualCalendarConfig.find(
        ({ vvName }) =>
          vvName === team.naamOpVoetbalVlaanderen || vvName === team.naam
      )
      const vvId = config?.vvId

      return {
        params: {
          category: team.categorie?.fields.naam?.toLowerCase(),
          team: team.naam?.toLowerCase(),
        },
        props: {
          ploeg: {
            ...team,
            categorie: {
              naam: team.categorie?.fields.naam || '',
              ploeg: teams
                .map(({ fields }) => fields)
                .filter(
                  (teamToFilter) =>
                    teamToFilter.categorie?.fields.naam ===
                    team.categorie?.fields.naam
                ),
            },
          } as Team, // todo: make this perfeclty satisfy Team
          rankings: vvId ? typedData.teamSeriesAndRankings[vvId]?.rankings : [],
          series: vvId ? typedData.teamSeriesAndRankings[vvId]?.series : [],
          teamCalendar: vvId ? typedData.teamCalendar[vvId] : [],
          googleCalId: config?.calendarId,
        },
      }
    })
}

const { ploeg, rankings, series, teamCalendar, googleCalId } = Astro.props
---

<Layout title={ploeg.naam} currentURL={Astro.url}>
  <TeamPage
    ploeg={ploeg}
    rankings={rankings}
    series={series}
    teamCalendar={teamCalendar}
    googleCalId={googleCalId}
  />
</Layout>
