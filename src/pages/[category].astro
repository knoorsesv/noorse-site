---
import { getEntries } from '../data/contentful/get-entries'
import { mapCategory, mapNewsItem, mapTeam } from '../data/contentful/mapping'
import type { ContentfulCategory } from '../data/contentful/types'
import Layout from '../layouts/Layout.astro'
import { CategoryPage } from '../react/pages'
import type { Category } from '../react/types/category'
import type { NewsItem } from '../react/types/news'
import type { Team } from '../react/types/team'

type StaticPaths = {
  params: { category: string }
  props: { category: Category; newsItems: NewsItem[]; teams: Team[] }
}

export async function getStaticPaths(): Promise<StaticPaths[]> {
  const categories = await getEntries<ContentfulCategory, Category>(
    'categorie',
    mapCategory
  )

  const newsItems = await Promise.all(
    categories.map((categorie) =>
      getEntries('news', mapNewsItem, {
        // @ts-expect-error this does work but seems not correctly typed by the contentful library
        'fields.category.sys.id': categorie.id,
      })
    )
  )

  const teams = await Promise.all(
    categories.map((categorie) =>
      getEntries('ploeg', mapTeam, {
        // @ts-expect-error this does work but seems not correctly typed by the contentful library
        'fields.categorie.sys.id': categorie.id,
      })
    )
  )

  const allSeparateCategories = categories.map((categorie, index) => ({
    params: { category: categorie.name.toLowerCase() },
    props: {
      category: categorie,
      newsItems: newsItems[index],
      teams: teams[index],
    },
  }))

  // console.log('categories', categories)

  return [
    ...allSeparateCategories,
    // {
    //   params: { title: 'jeugd' },
    //   props: {
    //     category: { name: 'Jeugd', id: 'jeugd' },
    //     newsItems:
    //       allSeparateCategories.find(({ params }) =>
    //         params.title.includes('jeugd')
    //       )?.props.newsItems || [],
    //     teams:
    //       allSeparateCategories.find(({ params }) =>
    //         params.title.includes('jeugd')
    //       )?.props.teams || [],
    //   },
    // },
  ]
}

const { category, teams, newsItems } = Astro.props
---

<Layout title={category.name} currentURL={Astro.url}>
  <CategoryPage category={category} teams={teams} newsItems={newsItems} />
</Layout>
