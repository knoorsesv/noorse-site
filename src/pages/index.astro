---
import { isFuture, parse } from 'date-fns'
import { getEntries } from '../data/contentful/get-entries'
import { mapEvent, mapNewsItem, mapSponsor } from '../data/contentful/mapping'
import { siteMetadata } from '../data/siteMetadata'
import { newsletterLink, siteMap, webshopLink } from '../env/constants'
import Page from '../layouts/Page.astro'
import { HomePage } from '../react/pages'

const sponsors = await getEntries('sponsor', mapSponsor)
// todo: could be limited by a query instead of fetching everything and then limiting
const newsItems = (await getEntries('news', mapNewsItem)).slice(0, 3)

// todo: two conditions because contentful API returns different formats for different environments, should be fixed there
const eventIsInfuture = (datum: string): boolean =>
  isFuture(parse(datum, 'dd/MM/yy', new Date())) ||
  isFuture(parse(datum, 'yyyy-MM-dd', new Date()))

const events = (await getEntries('evenement', mapEvent))
  .filter((item) => {
    return eventIsInfuture(item.datum)
  })
  .sort((a, b) => new Date(a.datum).getTime() - new Date(b.datum).getTime())

const links = { newsletterLink, webshopLink }
const version = siteMetadata.version
---

<Page title="Home">
  <HomePage
    siteMap={siteMap}
    events={events}
    links={links}
    newsItems={newsItems}
    version={version}
    sponsors={sponsors}
    client:visible
  />
</Page>
